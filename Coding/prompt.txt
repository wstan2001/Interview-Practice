OrderBooks
~~~~~~~~~~~~~~~~~
An order book is a data structure that stores and organizes limit orders that have 
been placed in a market. Limit orders represent a desire to buy or sell shares of 
a contract, and are characterized by four properties:
  - id: an integer, guaranteed to be unique and monotonically increasing for this 
        problem
  - side: either "Bid" or "Ask", representing the direction of the order (Buy/Sell)
  - price: the highest price one is willing to buy shares at, or the lowest price one
           is willing to sell shares at
  - size: how many shares to buy or sell

When a buy limit order has a price that is greater than or equal to the price of a 
sell limit order, the orders are said to "cross" and a trade will occur at the price 
of whichever limit order was placed first.

If a new order crosses with multiple resting orders, the resting order with the "best 
price" (highest for buy, lowest for sell) is executed against first, and ties in price
are broken by order placement time, with the earliest order getting executed against 
first. This is known as price-time priority.

# 1. Implement an orderbook that can read in a sequence of limit orders and print out the trades that occur. For each trade, please print the side of the order that triggered the trade, price, and size of the trade.

Input format: A list of limit orders of the form (id, side, limit price, size).

Ex. [
	(1, "Bid", 99.95, 500),
	(2, "Bid", 99.99, 100),
	(3, "Ask", 100.02, 300),
	(4, "Bid", 100.05, 200),
]

Output: [
	("Bid", 100.02, 200),
]

Ex. [
	(1, "Ask", 56.48, 100),
	(2, "Ask", 56.59, 500),
	(3, "Ask", 56.55, 200),
	(4, "Bid", 55.95, 300),
	(5, "Bid", 57.00, 1000),
]

Output: [
	("Bid", 56.48, 100),
	("Bid", 56.55, 200),
	("Bid", 56.59, 500),
]

# 2. Some clients would like to cancel their orders. A cancel request will be represented as a tuple of a single integer of the form (id). Please cancel the order with the given id.

Ex. [
	(1, "Bid", 90.91, 300),
	(2, "Bid", 90.80, 500),
	(3, "Ask", 91.02, 200),
	(1,),			# cancel!
	(4, "Ask", 90.70, 300),
]

Output: [
	("Ask", 90.80, 300),
]

Ex. [
	(1, "Bid", 9.52, 300),
	(2, "Ask", 10.01, 100),
	(3, "Ask", 10.05, 100),
	(4, "Ask", 10.02, 100),
	(5, "Ask", 10.04, 100),
	(6, "Ask", 10.10, 3000),
	(5,),			# cancel!
	(3,),			# cancel!
	(4,), 			# cancel!
	(7, "Bid", 11, 1000),
]

Output: [
	("Bid", 10.01, 100),
	("Bid", 10.10, 900),
]





